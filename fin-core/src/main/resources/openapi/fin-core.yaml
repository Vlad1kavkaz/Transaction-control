openapi: 3.0.0
info:
  title: FinCore API
  description: API for managing transactions and categories in the financial core service.
  version: 1.0.0
servers:
  - url: http://localhost:8080/v1/api
    description: Local development server
paths:
  /transactions:
    get:
      summary: Get a list of transactions for user
      parameters:
        - name: userId
          in: header
          required: true
          schema:
            type: string
            format: uuid
        - name: type
          in: query
          required: false
          schema:
            type: string
            enum: [INCOME, EXPENSE]
        - name: startDate
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
        '400':
          description: Invalid request parameters
        '401':
          description: Unauthorized
        '404':
          description: User not found
        '500':
          description: Internal Server Error

  /transactions/{id}:
    get:
      summary: Get transaction by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '400':
          description: Invalid transaction ID
        '401':
          description: Unauthorized
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error

    put:
      summary: Update transaction by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionUpdate'
      responses:
        '200':
          description: Transaction updated successfully
        '400':
          description: Invalid request body or ID
        '401':
          description: Unauthorized
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error

    delete:
      summary: Delete transaction by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Transaction deleted successfully
        '400':
          description: Invalid transaction ID
        '401':
          description: Unauthorized
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error

  /categories:
    get:
      summary: Get list of categories
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
        '400':
          description: Invalid request parameters
        '401':
          description: Unauthorized
        '404':
          description: User not found
        '500':
          description: Internal Server Error

  /banks:
    get:
      summary: Get list of banks
      parameters:
        - name: country
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bank'
        '400':
          description: Invalid request parameters
        '401':
          description: Unauthorized
        '404':
          description: User not found

components:
  schemas:
    Transaction:
      type: object
      properties:
        id:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        amount:
          type: number
          format: double
        categoryId:
          type: string
          format: uuid
        date:
          type: string
          format: date-time
        description:
          type: string
        type:
          type: string
          enum: [INCOME, EXPENSE]

    TransactionUpdate:
      type: object
      properties:
        amount:
          type: number
          format: double
        categoryId:
          type: string
          format: uuid
        type:
          type: string
          enum:
            - EXPENSE
            - INCOME
        description:
          type: string

    Category:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string

    Bank:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        country:
          type: string